// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User{
  id          String @id // ClerkId
  email       String @unique
  firstName   String
  lastName    String
  superAdmin  Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt 

  gymUsers        GymUser[]
}

enum GymStatus {
  PENDING
  APPROVED
  INACTIVE
  TERMINATED
  }

model Gym {
  id          String @id @default(uuid())
  name        String @unique
  address     String
  city        String
  state       String
  zip         String
  phone       String?
  website     String?
  status      GymStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  users       GymUser[]
}

enum GymRole {
  ADMIN
  COACH
  CLIENT
}

enum GymUserStatus {
  PENDING
  ACTIVE
  INACTIVE
  TERMINATED
}

model GymUser {
  id          String @id @default(uuid())
  userId      String
  gymId       String
  role        GymRole @default(CLIENT)
  status      GymUserStatus @default(PENDING)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user        User @relation(fields: [userId], references: [id])
  gym         Gym @relation(fields: [gymId], references: [id])

  @@unique([userId, gymId])
}